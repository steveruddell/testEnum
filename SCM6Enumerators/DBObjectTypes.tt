<#@ template language="VB" debug="true" hostSpecific="true" #>
<#@ output extension="vb" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ assembly name="System.Data"#>
<#@ assembly name="System.XML" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SQLClient" #>
<#


	Dim _SQlConn as New sqlconnection( "Data Source=sissql2;Initial Catalog=SCM6;User ID=scm6_user;Password=pL@tf0RM!")
	Dim _SqlAdapt as New SqlDataAdapter("Proc_TypeEnumeratorsGet",  _sqlconn)
	Dim _DataSet as New Dataset
	Dim _EnumAsIntegers as Boolean = False
	
	_SqlConn.Open
	_SqlAdapt.Fill(_DataSet)
	_SqlConn.Close

#>
'=================================================================
'This File is automatically generated by the DBObjectsType.tt
'T4 file. Do not make any changes here. They will be overwirtten
'every time there is a build. Make changes in the appropriate
'object Type tables in the Database.
'=================================================================

Namespace SCM6Enums

#Region "Lookup Type Enums"
	
<#Dim TableNo as Integer=0 #>


<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
 	''' <summary>
    '''Represents the types associated with Ads 
    ''' </summary>
    ''' <remarks>Represents the types associated with Ads</remarks>
Public Enum eAdType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
<#=EnumNumber(Item("ID")) & " [" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>

<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Categories 
    ''' </summary>
    ''' <remarks>Represents the types associated with Categories</remarks>

Public Enum eArticleType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>	
	 <#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>

<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Categories 
    ''' </summary>
    ''' <remarks>Represents the types associated with Categories</remarks>

Public Enum eCategoryType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>

	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with LinkMembers 
    ''' </summary>
    ''' <remarks>Represents the types associated with LinkMembers</remarks>
Public Enum eLinkMemberType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Multimedia 
    ''' </summary>
    ''' <remarks>Represents the types associated with Multimedia</remarks>
Public Enum eMultimediaType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Quizzes 
    ''' </summary>
    ''' <remarks>Represents the types associated with Quizzes</remarks>
Public Enum eQuizType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Resources 
    ''' </summary>
    ''' <remarks>Represents the types associated with Resources</remarks>
Public Enum eResourceType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Sections 
    ''' </summary>
    ''' <remarks>Represents the types associated with Sections</remarks>
Public Enum eSectionType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Subscriptions 
    ''' </summary>
    ''' <remarks>Represents the types associated with Subscriptions</remarks>
Public Enum eSubscriptionType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Links
    ''' </summary>
    ''' <remarks>Represents the types associated with Links</remarks>
Public Enum eLinkType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Links
    ''' </summary>
    ''' <remarks>Represents the types associated with Links</remarks>
Public Enum eArticleRootType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) &  "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Links
    ''' </summary>
    ''' <remarks>Represents the types associated with Links</remarks>
Public Enum eUserCommentStatusType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Alerts
    ''' </summary>
    ''' <remarks>Represents the types associated with Links</remarks>
Public Enum eAlertTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Address
    ''' </summary>
    ''' <remarks>Represents the types associated with Address</remarks>
Public Enum eAddressTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Products
    ''' </summary>
    ''' <remarks>Represents the types associated with Products</remarks>
Public Enum eProductTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Product Terms
    ''' </summary>
    ''' <remarks>Represents the types associated with Product Terms</remarks>
Public Enum eProductTermsType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the stages associated with user quizzes
    ''' </summary>
    ''' <remarks>Represents the stages associated with user quizzes</remarks>
Public Enum eUserQuizStage As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the user CME credit types
    ''' </summary>
    ''' <remarks>Represents the user CME credit types</remarks>
Public Enum eCMECreditType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the user CME credit types
    ''' </summary>
    ''' <remarks>Represents the user CME credit types</remarks>
Public Enum eGroupType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>

<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types of Self-Serve Content (and therefore how a piece of Self-Serve Content is used)
    ''' </summary>
    ''' <remarks>Represents the types of Self-Serve Content (and therefore how a piece of Self-Serve Content is used)</remarks>
Public Enum eSelfServeContentType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum

<#TableNo +=1 #>

<# End If #>


<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
    '''Represents the types of Sites
    ''' </summary>
    ''' <remarks>Represents the types of Sites</remarks>

Public Enum eSiteType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	'''Represents types of actions to be controlled by resourceActionPermissions
	''' </summary>
	''' <remarks>Represents types of actions to be controlled by resourceActionPermissions</remarks>

Public Enum eResourceActionType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	'''Represents types of Author Types
	''' </summary>
	''' <remarks>Author Types</remarks>

Public Enum eAuthorType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>
	
<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	'''Represents types of Billing Status Types
	''' </summary>
	''' <remarks>Billing Status Types</remarks>

Public Enum eBillingStatusType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	'''Represents types of Subscription Status Types
	''' </summary>
	''' <remarks>Subscription Status Types</remarks>

Public Enum eSubscriptionStatusType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	'''Represents types of Agreement Status Types
	''' </summary>
	''' <remarks>Agreement Status Types</remarks>

Public Enum eAgreementStatusType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	'''Represents types of tokens
	''' </summary>
	''' <remarks>Token Types</remarks>

Public Enum eTokenTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' Contains the IDs of each client 
	''' </summary>
	''' <remarks>Client IDs</remarks>

Public Enum eClients As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("clientName")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' Represents types of Institution Federations
	''' </summary>

Public Enum eInstitutionFederationType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("FederationType")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' Contains the IDs of each Payment Method
	''' </summary>
	''' <remarks></remarks>

Public Enum ePaymentMethods As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' Contains the IDs of each Payment Method Type
	''' </summary>
	''' <remarks></remarks>

Public Enum ePaymentMethodTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' Represents the statuses available to e.g. ConfrenceVolume.OpenStatus
	''' </summary>
	''' <remarks></remarks>

Public Enum eOpenStatus As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the types of client APIs. 3rd-party service providers.
	''' </summary>
	''' <remarks></remarks>

Public Enum eClientAPIKeyTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


#End Region
	

end namespace


 
<#+
  
Function CleanName(NameIn as String) as String
	
	'Dim mybuffer as String
	
	'mybuffer = namein.Replace(";","").Replace("'","").ToString
		
	return namein.replace( " ","").replace(":","").replace("-","").replace("/","").replace("&","").Replace(",","").Replace(";","").Replace("'","").replace(")","").replace("(","").replace(".","").replace("$","").replace("+","").tostring	
End Function

Function EnumNumber(IDin as Integer) as String
	
	
	
		return  "<Xml.Serialization.XmlEnum(""" & IDin &   """)>" 
		
	
		'Return " "
		

End Function
#>