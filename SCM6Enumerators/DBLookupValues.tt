<#@ template language="VB" debug="true" hostSpecific="true" #>
<#@ output extension="vb" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ assembly name="System.Data"#>
<#@ assembly name="System.XML" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ import namespace="System.Data" #>
<#@ import namespace="System.Data.SQLClient" #>
<#


	Dim _SQlConn as New sqlconnection( "Data Source=SCM-SQLDEV\DEV;Initial Catalog=SCM6;User ID=scm6_user;Password=pL@tf0RM!")
	Dim _SqlAdapt as New SqlDataAdapter("Proc_TypeEnumeratorsGet",  _sqlconn)
	Dim _DataSet as New Dataset
	Dim _EnumAsIntegers as Boolean = False
	
	_SqlConn.Open
	_SqlAdapt.Fill(_DataSet)
	_SqlConn.Close

#>
'=================================================================
'DBObjectTypes.vb is automatically generated by the DBObjectsType.tt
'T4 file. Do not make any changes in the vb file.
'
'Enumeration members are gotten from a call to Proc_TypeEnumeratorsGet in the database.
'=================================================================

Namespace SCM6Enums

#Region "Lookup Type Enums"
	
<#Dim TableNo as Integer=0 #>


<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
 	''' <summary>
    '''Represents the types associated with Ads 
    ''' </summary>
    ''' <remarks>Represents the types associated with Ads</remarks>
Public Enum eAdType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>

<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Categories 
    ''' </summary>
    ''' <remarks>Represents the types associated with Categories</remarks>

Public Enum eArticleType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>	
	 <#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>

<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Categories 
    ''' </summary>
    ''' <remarks>Represents the types associated with Categories</remarks>

Public Enum eCategoryType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>

	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with LinkMembers 
    ''' </summary>
    ''' <remarks>Represents the types associated with LinkMembers</remarks>
Public Enum eLinkMemberType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Multimedia 
    ''' </summary>
    ''' <remarks>Represents the types associated with Multimedia</remarks>
Public Enum eMultimediaType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Quizzes 
    ''' </summary>
    ''' <remarks>Represents the types associated with Quizzes</remarks>
Public Enum eQuizType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Resources 
    ''' </summary>
    ''' <remarks>Represents the types associated with Resources</remarks>
Public Enum eResourceType As Integer
<#=EnumNumber(0) #> Undefined = 0 
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Sections 
    ''' </summary>
    ''' <remarks>Represents the types associated with Sections</remarks>
Public Enum eSectionType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Subscriptions 
    ''' </summary>
    ''' <remarks>Represents the types associated with Subscriptions</remarks>
Public Enum eSubscriptionType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Links
    ''' </summary>
    ''' <remarks>Represents the types associated with Links</remarks>
Public Enum eLinkType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Links
    ''' </summary>
    ''' <remarks>Represents the types associated with Links</remarks>
Public Enum eArticleRootType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) &  "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Links
    ''' </summary>
    ''' <remarks>Represents the types associated with Links</remarks>
Public Enum eUserCommentStatusType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Alerts
    ''' </summary>
    ''' <remarks>Represents the types associated with Links</remarks>
Public Enum eAlertTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Address
    ''' </summary>
    ''' <remarks>Represents the types associated with Address</remarks>
Public Enum eAddressTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Products
    ''' </summary>
    ''' <remarks>Represents the types associated with Products</remarks>
Public Enum eProductTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types associated with Product Terms
    ''' </summary>
    ''' <remarks>Represents the types associated with Product Terms</remarks>
Public Enum eProductTermsType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the stages associated with user quizzes
    ''' </summary>
    ''' <remarks>Represents the stages associated with user quizzes</remarks>
Public Enum eUserQuizStage As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the user CME credit types
    ''' </summary>
    ''' <remarks>Represents the user CME credit types</remarks>
Public Enum eCMECreditType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the user CME credit types
    ''' </summary>
    ''' <remarks>Represents the user CME credit types</remarks>
Public Enum eGroupType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>

<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    '''Represents the types of Self-Serve Content (and therefore how a piece of Self-Serve Content is used)
    ''' </summary>
    ''' <remarks>Represents the types of Self-Serve Content (and therefore how a piece of Self-Serve Content is used)</remarks>
Public Enum eSelfServeContentType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum

<#TableNo +=1 #>

<# End If #>


<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
    '''Represents the types of Sites
    ''' </summary>
    ''' <remarks>Represents the types of Sites</remarks>

Public Enum eSiteType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	'''Represents types of actions to be controlled by resourceActionPermissions
	''' </summary>
	''' <remarks>Represents types of actions to be controlled by resourceActionPermissions</remarks>

Public Enum eResourceActionType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	'''Represents types of Author Types
	''' </summary>
	''' <remarks>Author Types</remarks>

Public Enum eAuthorType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>
	
<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	'''Represents types of Billing Status Types
	''' </summary>
	''' <remarks>Billing Status Types</remarks>

Public Enum eBillingStatusType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	'''Represents types of Subscription Status Types
	''' </summary>
	''' <remarks>Subscription Status Types</remarks>

Public Enum eSubscriptionStatusType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	'''Represents types of Agreement Status Types
	''' </summary>
	''' <remarks>Agreement Status Types</remarks>

Public Enum eAgreementStatusType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	'''Represents types of tokens
	''' </summary>
	''' <remarks>Token Types</remarks>

Public Enum eTokenTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' Contains the IDs of each client 
	''' </summary>
	''' <remarks>Client IDs</remarks>

Public Enum eClients As Integer
	<Xml.Serialization.XmlEnum("11")>[TheMcGrawHillCompanies] = 11	
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("clientName")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' Represents types of Institution Federations
	''' </summary>

Public Enum eInstitutionFederationType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("FederationType")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' Contains the IDs of each Payment Method
	''' </summary>
	''' <remarks></remarks>

Public Enum ePaymentMethods As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' Contains the IDs of each Payment Method Type
	''' </summary>
	''' <remarks></remarks>

Public Enum ePaymentMethodTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' Represents the statuses available to e.g. ConfrenceVolume.OpenStatus
	''' </summary>
	''' <remarks></remarks>

Public Enum eOpenStatus As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the types of client APIs. 3rd-party service providers.
	''' </summary>
	''' <remarks></remarks>

Public Enum eClientAPIKeyTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the types of Alert Trigger Statuses
	''' </summary>
	''' <remarks></remarks>

Public Enum eAlertTriggerStatus As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("statusName")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the types of token Configuration Types
	''' </summary>
	''' <remarks></remarks>

Public Enum etokenConfigurationType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the Pages for Configuration
	''' </summary>
	''' <remarks></remarks>

Public Enum eConfigPages As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the User Controls for Configuration
	''' </summary>
	''' <remarks></remarks>

Public Enum eConfigUserControls As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the Configuration Value Types 
	''' </summary>
	''' <remarks></remarks>

Public Enum eConfigValueTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the Configurable Settings Defaults
	''' </summary>
	''' <remarks></remarks>

Public Enum eConfigSettings As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("uniqueName")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the contentResolverTypes
	''' </summary>
	''' <remarks></remarks>

Public Enum eContentResolverTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("typeName")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the contentResolverTypes
	''' </summary>
	''' <remarks></remarks>

Public Enum eScheduleTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the Configurable Settings Defaults for SiteMaster
	''' </summary>
	''' <remarks>eConfigSettings is for front-end/content sites only</remarks>

Public Enum eConfigSettingsSiteMaster As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("uniqueName")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the Configurable Setting Types (Public and SiteMaster)
	''' </summary>
	''' <remarks>Type used to differentiate settings between Front-end (Public) and SiteMaster sites</remarks>

Public Enum eConfigSettingTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the Deposit Book Types
	''' </summary>
	''' <remarks></remarks>

Public Enum eDepositBookTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the Site Menu Types
	''' </summary>
	''' <remarks></remarks>

Public Enum eSiteMenuTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


	''' <summary>
	''' These are the LinkDecorations for SiteMenu records to determine how links should be generated
	''' </summary>
	''' <remarks></remarks>
    <Flags>
    Public Enum eLinkDecorations As Integer
        None = 0
        RelNoFollow = 1
    End Enum

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are resourceAccessTypes
	''' </summary>
	''' <remarks></remarks>

Public Enum eResourceAccessTypes as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("name")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are eConfigSiteSettings
	''' </summary>
	''' <remarks></remarks>
Public Enum eConfigSiteSettings as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("UniqueName")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are eConfigJournalSettings
	''' </summary>
	''' <remarks></remarks>
Public Enum eConfigJournalSettings as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("UniqueName")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are eCitationReplacementStrings
	''' </summary>
	''' <remarks></remarks>
Public Enum eCitationReplacementStrings as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' 
	''' </summary>
	''' <remarks></remarks>
Public Enum eEnvironments as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are UserRoles
	''' </summary>
	''' <remarks></remarks>
Public Enum eUserRole as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are Permissions
	''' </summary>
	''' <remarks></remarks>
Public Enum ePermission as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are solActiveStatusLookups
	''' </summary>
	''' <remarks></remarks>
Public Enum eSolActiveStatuses as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are solActivityTypeLookups
	''' </summary>
	''' <remarks></remarks>
Public Enum eSolActivityTypes as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are solContainerTypeLookups
	''' </summary>
	''' <remarks></remarks>
Public Enum eSolContainerTypes as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are GBOS Types
	''' </summary>
	''' <remarks></remarks>
Public Enum eGbosType as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are GBOS Types
	''' </summary>
	''' <remarks></remarks>
Public Enum eConfigApiSettings as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("UniqueName")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>
	
<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are solLearnerGroupTypes Types
	''' </summary>
	''' <remarks></remarks>
Public Enum eSolLearnerGroupTypes as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("learnerGroupType")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>
	
<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are solQuizTypes Types
	''' </summary>
	''' <remarks></remarks>
Public Enum eSolQuizTypes as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("quizType")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>
	
<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are solQuestionTypes Types
	''' </summary>
	''' <remarks></remarks>
Public Enum eSolQuestionTypes as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("questionType")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>

	
<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are resourceIndex Types
	''' </summary>
	''' <remarks></remarks>
Public Enum eResourceIndexTypes as Short
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are authorNote Types
	''' </summary>
	''' <remarks></remarks>
Public Enum eAuthorNoteTypes as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are shibboleth attribute names and ids
	''' </summary>
	''' <remarks></remarks>

Public Enum eShibolethSSOAttributes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

	<#TableNo +=1 #>
	<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' Methods for logging into the system. Bit Flag type enumeration (meaning a combination of multiple through bitwise ORs is valid)
	''' See Extensions module in this project for methods to make using them easier
	''' </summary>
	''' <remarks></remarks>
	<Flags()> _
	Public Enum eLoginMethodFlag As Integer
	<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
		<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
	<#Next #>
	End Enum
	<# End If #>



<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are Book Types
	''' </summary>
	''' <remarks></remarks>

Public Enum eBookTocTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are targets for polling deposits (e.g., PubMed)
	''' </summary>
	''' <remarks></remarks>

Public Enum eDepositTargets As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are targets for polling deposits (e.g., PubMed)
	''' </summary>
	''' <remarks></remarks>

Public Enum eContentDepositAndQueryStatus As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These enums for Solr Facet Display Types.
	''' </summary>
	''' <remarks></remarks>

Public Enum eSolrFacetDisplayTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These enums for Solr Facet Sort Types.
	''' </summary>
	''' <remarks></remarks>

Public Enum eSolrFacetSortTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These enums for Solr Facet Types.
	''' </summary>
	''' <remarks></remarks>

Public Enum eSolrFacetTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These enums for Solr Order Types.
	''' </summary>
	''' <remarks></remarks>

Public Enum eSolrOrderTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' TA-5380 / ARB-17: Algorithms for sorting child groups (e.g., sub-headings) underneath TOC headings.
	''' See also the TocHeading model class.
	''' </summary>
	''' <remarks></remarks>

Public Enum eTocGroupingSortingAlgorithm As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' TA-5380 / ARB-17: Algorithms for sorting child artifacts (e.g., articles) underneath TOC headings.
	''' See also the TocHeading model class.
	''' </summary>
	''' <remarks></remarks>

Public Enum eTocArtifactSortingAlgorithm As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

Public Enum eAdvertistingTargetingTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' TA-5381: Drop smContentLoaderElements table and use config client settings instead for Zipline importing.
	''' </summary>
	''' <remarks></remarks>

Public Enum eZiplineConfigSettings As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("UniqueName")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>



<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' TA-5696: Add substatus to upload config
	''' </summary>
	''' <remarks></remarks>

Public Enum eSmUploadSubStatuses As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' TE-6969: Add Languages
	''' </summary>
	''' <remarks></remarks>

Public Enum eLanguages As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' TE-7054, add GbosPubStateTypes
	''' </summary>
	''' <remarks></remarks>

Public Enum eGbosPubStateTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("gbosPubStateType")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>

	''' <summary>
	''' These are eConfigBookSettings
	''' </summary>
	''' <remarks></remarks>
Public Enum eConfigBookSettings as Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("UniqueName")) & "] =" & Item("ID") #>
<#Next #>
End Enum
<# End If #>


<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>
	''' <summary>
	''' Types of resource heirarchy structure available to the Outbound Content Package Generator
	''' </summary>
	''' <remarks></remarks>
Public Enum eOutboundContentPackageResourceStructureTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("id")) & "[" & CleanName(Item("name")) &  "] = " & Item("id") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>
	''' <summary>
	''' Import options
	''' </summary>
	''' <remarks>SCMP-704</remarks>
Public Enum eImportOption As Integer
    <#=EnumNumber(0) #> Undefined = 0 ' legacy magic value used in code only
    <# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
    	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("OptionTypeName")) &  "] = " & Item("ID") #>	
    <#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>
	''' <summary>
	''' Defines the timespan that a date field represents in a usage metrics table. Allows for use of dates to represent individual days, months, years, etc.
	''' </summary>
	''' <remarks></remarks>
Public Enum eUsageDateTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("id")) & "[" & CleanName(Item("name")) &  "] = " & Item("id") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>
	''' <summary>
	''' Defines multimedia supplement types
	''' </summary>
	''' <remarks></remarks>
Public Enum eMultimediaSupplementTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("id")) & "[" & CleanName(Item("name")) &  "] = " & Item("id") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>
	''' <summary>
	''' Defines SolLearnerTrackingQuizModes enumeration type
	''' </summary>
	''' <remarks></remarks>
Public Enum eSolLearnerTrackingQuizModes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("id")) & "[" & CleanName(Item("name")) &  "] = " & Item("id") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count > 0 then #>
	''' <summary>
	''' Defines SolLearnerTrackingQuizTypes enumeration type
	''' </summary>
	''' <remarks></remarks>
Public Enum eSolLearnerTrackingQuizTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("id")) & "[" & CleanName(Item("name")) &  "] = " & Item("id") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    ''' userActivityStatus
    ''' </summary>
    ''' <remarks>Represents the userActivityStatus</remarks>
Public Enum eUserActivityStatus As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>
	''' <summary>
    ''' userActivityTypes
    ''' </summary>
    ''' <remarks>Represents the userActivityTypes</remarks>
Public Enum eUserActivityTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the contentAssignmentRuleTypes
	''' </summary>
	''' <remarks></remarks>

Public Enum eContentAssignmentRuleTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the logEventTypes
	''' </summary>
	''' <remarks></remarks>

Public Enum eLogEventTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the TaskExecutionStatus
	''' </summary>
	''' <remarks></remarks>

Public Enum eTaskExecutionStatus As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the IssueTocTypes
	''' </summary>
	''' <remarks></remarks>

Public Enum eIssueTocType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the SiteReleaseStages
	''' </summary>
	''' <remarks></remarks>

Public Enum eSiteReleaseStages As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the DepositTypes
	''' </summary>
	''' <remarks></remarks>

Public Enum eDepositTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the IssueTypes
	''' </summary>
	''' <remarks></remarks>

Public Enum eIssueType As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the Restricted site states
	''' </summary>
	''' <remarks></remarks>

Public Enum eSiteState As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("stateName")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the DepositStatuses
	''' </summary>
	''' <remarks></remarks>

Public Enum eDepositStatus As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the SectionDTDs
	''' </summary>
	''' <remarks></remarks>

Public Enum eSectionDTDs As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the ExternalLoginProviderHandlers
	''' </summary>
	''' <remarks></remarks>

Public Enum eExternalLoginProviderHandlers As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are the fieldTypes
	''' </summary>
	''' <remarks></remarks>

Public Enum eFieldTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

<#TableNo +=1 #>
<# If _DataSet.Tables(TableNo).Rows.Count>0 then #>

	''' <summary>
	''' These are eSolrFacetFilterTypes
	''' </summary>
	''' <remarks></remarks>

Public Enum eSolrFacetFilterTypes As Integer
<# For Each Item as DataRow in _DataSet.Tables(TableNo).Rows #>
	<#=EnumNumber(Item("ID")) & "[" & CleanName(Item("Name")) &  "] = " & Item("ID") #>	
<#Next #>
End Enum
<# End If #>

#End Region

end namespace


 
<#+  
Function CleanName(NameIn as String) as String
	return namein.
        replace(" ","").
        replace(":","").
        replace("-","").
        replace("/","").
        replace("&","").
        Replace(",","").
        Replace(";","").
        Replace("'","").
        replace(")","").
        replace("(","").
        replace(".","").
        replace("$","").
        replace("+","").
        tostring	
End Function

Function EnumNumber(IDin as Integer) as String
		return  "<Xml.Serialization.XmlEnum(""" & IDin &   """)>" 
End Function
#>